import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { NgDropdownPanelService } from './ng-dropdown-panel.service';
import { DropdownPosition } from './ng-select.component';
import { NgOption } from './ng-select.types';
import * as ɵngcc0 from '@angular/core';
export declare class NgDropdownPanelComponent implements OnInit, OnChanges, OnDestroy {
    private _renderer;
    private _zone;
    private _panelService;
    private _document;
    items: NgOption[];
    markedItem: NgOption;
    position: DropdownPosition;
    appendTo: string;
    bufferAmount: any;
    virtualScroll: boolean;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    filterValue: string;
    update: EventEmitter<any[]>;
    scroll: EventEmitter<{
        start: number;
        end: number;
    }>;
    scrollToEnd: EventEmitter<void>;
    outsideClick: EventEmitter<void>;
    contentElementRef: ElementRef;
    scrollElementRef: ElementRef;
    paddingElementRef: ElementRef;
    private readonly _destroy$;
    private readonly _dropdown;
    private _virtualPadding;
    private _scrollablePanel;
    private _contentPanel;
    private _select;
    private _parent;
    private _scrollToEndFired;
    private _updateScrollHeight;
    private _lastScrollPosition;
    constructor(_renderer: Renderer2, _zone: NgZone, _panelService: NgDropdownPanelService, _elementRef: ElementRef, _document: any);
    private _currentPosition;
    get currentPosition(): DropdownPosition;
    private _itemsLength;
    private get itemsLength();
    private set itemsLength(value);
    private get _startOffset();
    handleMousedown($event: MouseEvent): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    scrollTo(option: NgOption, startFromOption?: boolean): void;
    scrollToTag(): void;
    adjustPosition(): void;
    private _handleDropdownPosition;
    private _handleScroll;
    private _handleOutsideClick;
    private _checkToClose;
    private _onItemsChange;
    private _updateItems;
    private _updateItemsRange;
    private _onContentScrolled;
    private _updateVirtualHeight;
    private _setVirtualHeight;
    private _onItemsLengthChanged;
    private _renderItemsRange;
    private _measureDimensions;
    private _fireScrollToEnd;
    private _calculateCurrentPosition;
    private _appendDropdown;
    private _updateXPosition;
    private _updateYPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgDropdownPanelComponent, [null, null, null, null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgDropdownPanelComponent, "ng-dropdown-panel", never, { "items": "items"; "position": "position"; "virtualScroll": "virtualScroll"; "filterValue": "filterValue"; "markedItem": "markedItem"; "appendTo": "appendTo"; "bufferAmount": "bufferAmount"; "headerTemplate": "headerTemplate"; "footerTemplate": "footerTemplate"; }, { "update": "update"; "scroll": "scroll"; "scrollToEnd": "scrollToEnd"; "outsideClick": "outsideClick"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctZHJvcGRvd24tcGFuZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm5nLWRyb3Bkb3duLXBhbmVsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdEcm9wZG93blBhbmVsU2VydmljZSB9IGZyb20gJy4vbmctZHJvcGRvd24tcGFuZWwuc2VydmljZSc7XG5pbXBvcnQgeyBEcm9wZG93blBvc2l0aW9uIH0gZnJvbSAnLi9uZy1zZWxlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IE5nT3B0aW9uIH0gZnJvbSAnLi9uZy1zZWxlY3QudHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmdEcm9wZG93blBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBfcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBfem9uZTtcbiAgICBwcml2YXRlIF9wYW5lbFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBfZG9jdW1lbnQ7XG4gICAgaXRlbXM6IE5nT3B0aW9uW107XG4gICAgbWFya2VkSXRlbTogTmdPcHRpb247XG4gICAgcG9zaXRpb246IERyb3Bkb3duUG9zaXRpb247XG4gICAgYXBwZW5kVG86IHN0cmluZztcbiAgICBidWZmZXJBbW91bnQ6IGFueTtcbiAgICB2aXJ0dWFsU2Nyb2xsOiBib29sZWFuO1xuICAgIGhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZvb3RlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgdXBkYXRlOiBFdmVudEVtaXR0ZXI8YW55W10+O1xuICAgIHNjcm9sbDogRXZlbnRFbWl0dGVyPHtcbiAgICAgICAgc3RhcnQ6IG51bWJlcjtcbiAgICAgICAgZW5kOiBudW1iZXI7XG4gICAgfT47XG4gICAgc2Nyb2xsVG9FbmQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBvdXRzaWRlQ2xpY2s6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICBjb250ZW50RWxlbWVudFJlZjogRWxlbWVudFJlZjtcbiAgICBzY3JvbGxFbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIHBhZGRpbmdFbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgX2Rlc3Ryb3kkO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgX2Ryb3Bkb3duO1xuICAgIHByaXZhdGUgX3ZpcnR1YWxQYWRkaW5nO1xuICAgIHByaXZhdGUgX3Njcm9sbGFibGVQYW5lbDtcbiAgICBwcml2YXRlIF9jb250ZW50UGFuZWw7XG4gICAgcHJpdmF0ZSBfc2VsZWN0O1xuICAgIHByaXZhdGUgX3BhcmVudDtcbiAgICBwcml2YXRlIF9zY3JvbGxUb0VuZEZpcmVkO1xuICAgIHByaXZhdGUgX3VwZGF0ZVNjcm9sbEhlaWdodDtcbiAgICBwcml2YXRlIF9sYXN0U2Nyb2xsUG9zaXRpb247XG4gICAgY29uc3RydWN0b3IoX3JlbmRlcmVyOiBSZW5kZXJlcjIsIF96b25lOiBOZ1pvbmUsIF9wYW5lbFNlcnZpY2U6IE5nRHJvcGRvd25QYW5lbFNlcnZpY2UsIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLCBfZG9jdW1lbnQ6IGFueSk7XG4gICAgcHJpdmF0ZSBfY3VycmVudFBvc2l0aW9uO1xuICAgIGdldCBjdXJyZW50UG9zaXRpb24oKTogRHJvcGRvd25Qb3NpdGlvbjtcbiAgICBwcml2YXRlIF9pdGVtc0xlbmd0aDtcbiAgICBwcml2YXRlIGdldCBpdGVtc0xlbmd0aCgpO1xuICAgIHByaXZhdGUgc2V0IGl0ZW1zTGVuZ3RoKHZhbHVlKTtcbiAgICBwcml2YXRlIGdldCBfc3RhcnRPZmZzZXQoKTtcbiAgICBoYW5kbGVNb3VzZWRvd24oJGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgc2Nyb2xsVG8ob3B0aW9uOiBOZ09wdGlvbiwgc3RhcnRGcm9tT3B0aW9uPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgc2Nyb2xsVG9UYWcoKTogdm9pZDtcbiAgICBhZGp1c3RQb3NpdGlvbigpOiB2b2lkO1xuICAgIHByaXZhdGUgX2hhbmRsZURyb3Bkb3duUG9zaXRpb247XG4gICAgcHJpdmF0ZSBfaGFuZGxlU2Nyb2xsO1xuICAgIHByaXZhdGUgX2hhbmRsZU91dHNpZGVDbGljaztcbiAgICBwcml2YXRlIF9jaGVja1RvQ2xvc2U7XG4gICAgcHJpdmF0ZSBfb25JdGVtc0NoYW5nZTtcbiAgICBwcml2YXRlIF91cGRhdGVJdGVtcztcbiAgICBwcml2YXRlIF91cGRhdGVJdGVtc1JhbmdlO1xuICAgIHByaXZhdGUgX29uQ29udGVudFNjcm9sbGVkO1xuICAgIHByaXZhdGUgX3VwZGF0ZVZpcnR1YWxIZWlnaHQ7XG4gICAgcHJpdmF0ZSBfc2V0VmlydHVhbEhlaWdodDtcbiAgICBwcml2YXRlIF9vbkl0ZW1zTGVuZ3RoQ2hhbmdlZDtcbiAgICBwcml2YXRlIF9yZW5kZXJJdGVtc1JhbmdlO1xuICAgIHByaXZhdGUgX21lYXN1cmVEaW1lbnNpb25zO1xuICAgIHByaXZhdGUgX2ZpcmVTY3JvbGxUb0VuZDtcbiAgICBwcml2YXRlIF9jYWxjdWxhdGVDdXJyZW50UG9zaXRpb247XG4gICAgcHJpdmF0ZSBfYXBwZW5kRHJvcGRvd247XG4gICAgcHJpdmF0ZSBfdXBkYXRlWFBvc2l0aW9uO1xuICAgIHByaXZhdGUgX3VwZGF0ZVlQb3NpdGlvbjtcbn1cbiJdfQ==
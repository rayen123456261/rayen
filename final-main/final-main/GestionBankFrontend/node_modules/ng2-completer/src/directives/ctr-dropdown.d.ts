import { AfterViewInit, ElementRef, OnDestroy, NgZone } from "@angular/core";
import { CompleterItem } from "../components/completer-item";
import { CtrCompleter, CompleterDropdown } from "./ctr-completer";
import * as ɵngcc0 from '@angular/core';
export interface CtrRowElement {
    setHighlighted(selected: boolean): void;
    getNativeElement(): any;
    getDataItem(): CompleterItem | null;
}
export declare class CtrRowItem {
    row: CtrRowElement;
    index: number;
    constructor(row: CtrRowElement, index: number);
}
export declare class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {
    private completer;
    private el;
    private zone;
    private rows;
    private currHighlighted;
    private isScrollOn;
    private _rowMouseDown;
    constructor(completer: CtrCompleter, el: ElementRef, zone: NgZone);
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    onMouseDown(event: any): void;
    registerRow(row: CtrRowItem): void;
    unregisterRow(rowIndex: number): void;
    highlightRow(index: number | null): void;
    clear(): void;
    onSelected(item: CompleterItem | null): void;
    rowMouseDown(): void;
    selectCurrent(): void;
    nextRow(): void;
    prevRow(): void;
    private dropdownScrollTopTo;
    private dropdownRowTop;
    private dropdownHeight;
    private dropdownRowOffsetHeight;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CtrDropdown, [{ host: true; }, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CtrDropdown, "[ctrDropdown]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3RyLWRyb3Bkb3duLmQudHMiLCJzb3VyY2VzIjpbImN0ci1kcm9wZG93bi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgTmdab25lIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENvbXBsZXRlckl0ZW0gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9jb21wbGV0ZXItaXRlbVwiO1xuaW1wb3J0IHsgQ3RyQ29tcGxldGVyLCBDb21wbGV0ZXJEcm9wZG93biB9IGZyb20gXCIuL2N0ci1jb21wbGV0ZXJcIjtcbmV4cG9ydCBpbnRlcmZhY2UgQ3RyUm93RWxlbWVudCB7XG4gICAgc2V0SGlnaGxpZ2h0ZWQoc2VsZWN0ZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIGdldE5hdGl2ZUVsZW1lbnQoKTogYW55O1xuICAgIGdldERhdGFJdGVtKCk6IENvbXBsZXRlckl0ZW0gfCBudWxsO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ3RyUm93SXRlbSB7XG4gICAgcm93OiBDdHJSb3dFbGVtZW50O1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgY29uc3RydWN0b3Iocm93OiBDdHJSb3dFbGVtZW50LCBpbmRleDogbnVtYmVyKTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEN0ckRyb3Bkb3duIGltcGxlbWVudHMgQ29tcGxldGVyRHJvcGRvd24sIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgcHJpdmF0ZSBjb21wbGV0ZXI7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSByb3dzO1xuICAgIHByaXZhdGUgY3VyckhpZ2hsaWdodGVkO1xuICAgIHByaXZhdGUgaXNTY3JvbGxPbjtcbiAgICBwcml2YXRlIF9yb3dNb3VzZURvd247XG4gICAgY29uc3RydWN0b3IoY29tcGxldGVyOiBDdHJDb21wbGV0ZXIsIGVsOiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgb25Nb3VzZURvd24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJSb3cocm93OiBDdHJSb3dJdGVtKTogdm9pZDtcbiAgICB1bnJlZ2lzdGVyUm93KHJvd0luZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGhpZ2hsaWdodFJvdyhpbmRleDogbnVtYmVyIHwgbnVsbCk6IHZvaWQ7XG4gICAgY2xlYXIoKTogdm9pZDtcbiAgICBvblNlbGVjdGVkKGl0ZW06IENvbXBsZXRlckl0ZW0gfCBudWxsKTogdm9pZDtcbiAgICByb3dNb3VzZURvd24oKTogdm9pZDtcbiAgICBzZWxlY3RDdXJyZW50KCk6IHZvaWQ7XG4gICAgbmV4dFJvdygpOiB2b2lkO1xuICAgIHByZXZSb3coKTogdm9pZDtcbiAgICBwcml2YXRlIGRyb3Bkb3duU2Nyb2xsVG9wVG87XG4gICAgcHJpdmF0ZSBkcm9wZG93blJvd1RvcDtcbiAgICBwcml2YXRlIGRyb3Bkb3duSGVpZ2h0O1xuICAgIHByaXZhdGUgZHJvcGRvd25Sb3dPZmZzZXRIZWlnaHQ7XG59XG4iXX0=
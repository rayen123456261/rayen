import { SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';
import { Grid } from './lib/grid';
import { DataSource } from './lib/data-source/data-source';
import { Row } from './lib/data-set/row';
import * as ɵngcc0 from '@angular/core';
export declare class Ng2SmartTableComponent implements OnChanges, OnDestroy {
    source: any;
    settings: Object;
    rowSelect: EventEmitter<any>;
    rowDeselect: EventEmitter<any>;
    userRowSelect: EventEmitter<any>;
    delete: EventEmitter<any>;
    edit: EventEmitter<any>;
    create: EventEmitter<any>;
    custom: EventEmitter<any>;
    deleteConfirm: EventEmitter<any>;
    editConfirm: EventEmitter<any>;
    createConfirm: EventEmitter<any>;
    rowHover: EventEmitter<any>;
    tableClass: string;
    tableId: string;
    perPageSelect: any;
    isHideHeader: boolean;
    isHideSubHeader: boolean;
    isPagerDisplay: boolean;
    rowClassFunction: Function;
    grid: Grid;
    defaultSettings: Object;
    isAllSelected: boolean;
    private onSelectRowSubscription;
    private onDeselectRowSubscription;
    private destroyed$;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    selectRow(index: number, switchPageToSelectedRowPage?: boolean): void;
    private deselectAllRows;
    editRowSelect(row: Row): void;
    onUserSelectRow(row: Row): void;
    onRowHover(row: Row): void;
    multipleSelectRow(row: Row): void;
    onSelectAllRows($event: any): void;
    onSelectRow(row: Row): void;
    onMultipleSelectRow(row: Row): void;
    initGrid(): void;
    prepareSource(): DataSource;
    prepareSettings(): Object;
    changePage($event: any): void;
    sort($event: any): void;
    filter($event: any): void;
    private resetAllSelector;
    private emitUserSelectRow;
    private emitSelectRow;
    private emitDeselectRow;
    private isIndexOutOfRange;
    private subscribeToOnSelectRow;
    private subscribeToOnDeselectRow;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Ng2SmartTableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Ng2SmartTableComponent, "ng2-smart-table", never, { "settings": "settings"; "source": "source"; }, { "rowSelect": "rowSelect"; "rowDeselect": "rowDeselect"; "userRowSelect": "userRowSelect"; "delete": "delete"; "edit": "edit"; "create": "create"; "custom": "custom"; "deleteConfirm": "deleteConfirm"; "editConfirm": "editConfirm"; "createConfirm": "createConfirm"; "rowHover": "rowHover"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLXNtYXJ0LXRhYmxlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZzItc21hcnQtdGFibGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaW1wbGVDaGFuZ2UsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdyaWQgfSBmcm9tICcuL2xpYi9ncmlkJztcbmltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICcuL2xpYi9kYXRhLXNvdXJjZS9kYXRhLXNvdXJjZSc7XG5pbXBvcnQgeyBSb3cgfSBmcm9tICcuL2xpYi9kYXRhLXNldC9yb3cnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmcyU21hcnRUYWJsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBzb3VyY2U6IGFueTtcbiAgICBzZXR0aW5nczogT2JqZWN0O1xuICAgIHJvd1NlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcm93RGVzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHVzZXJSb3dTZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRlbGV0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZWRpdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY3JlYXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjdXN0b206IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRlbGV0ZUNvbmZpcm06IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGVkaXRDb25maXJtOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjcmVhdGVDb25maXJtOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICByb3dIb3ZlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdGFibGVDbGFzczogc3RyaW5nO1xuICAgIHRhYmxlSWQ6IHN0cmluZztcbiAgICBwZXJQYWdlU2VsZWN0OiBhbnk7XG4gICAgaXNIaWRlSGVhZGVyOiBib29sZWFuO1xuICAgIGlzSGlkZVN1YkhlYWRlcjogYm9vbGVhbjtcbiAgICBpc1BhZ2VyRGlzcGxheTogYm9vbGVhbjtcbiAgICByb3dDbGFzc0Z1bmN0aW9uOiBGdW5jdGlvbjtcbiAgICBncmlkOiBHcmlkO1xuICAgIGRlZmF1bHRTZXR0aW5nczogT2JqZWN0O1xuICAgIGlzQWxsU2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBvblNlbGVjdFJvd1N1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIG9uRGVzZWxlY3RSb3dTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBkZXN0cm95ZWQkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IHtcbiAgICAgICAgW3Byb3BlcnR5TmFtZTogc3RyaW5nXTogU2ltcGxlQ2hhbmdlO1xuICAgIH0pOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgc2VsZWN0Um93KGluZGV4OiBudW1iZXIsIHN3aXRjaFBhZ2VUb1NlbGVjdGVkUm93UGFnZT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByaXZhdGUgZGVzZWxlY3RBbGxSb3dzO1xuICAgIGVkaXRSb3dTZWxlY3Qocm93OiBSb3cpOiB2b2lkO1xuICAgIG9uVXNlclNlbGVjdFJvdyhyb3c6IFJvdyk6IHZvaWQ7XG4gICAgb25Sb3dIb3Zlcihyb3c6IFJvdyk6IHZvaWQ7XG4gICAgbXVsdGlwbGVTZWxlY3RSb3cocm93OiBSb3cpOiB2b2lkO1xuICAgIG9uU2VsZWN0QWxsUm93cygkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25TZWxlY3RSb3cocm93OiBSb3cpOiB2b2lkO1xuICAgIG9uTXVsdGlwbGVTZWxlY3RSb3cocm93OiBSb3cpOiB2b2lkO1xuICAgIGluaXRHcmlkKCk6IHZvaWQ7XG4gICAgcHJlcGFyZVNvdXJjZSgpOiBEYXRhU291cmNlO1xuICAgIHByZXBhcmVTZXR0aW5ncygpOiBPYmplY3Q7XG4gICAgY2hhbmdlUGFnZSgkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgc29ydCgkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZmlsdGVyKCRldmVudDogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIHJlc2V0QWxsU2VsZWN0b3I7XG4gICAgcHJpdmF0ZSBlbWl0VXNlclNlbGVjdFJvdztcbiAgICBwcml2YXRlIGVtaXRTZWxlY3RSb3c7XG4gICAgcHJpdmF0ZSBlbWl0RGVzZWxlY3RSb3c7XG4gICAgcHJpdmF0ZSBpc0luZGV4T3V0T2ZSYW5nZTtcbiAgICBwcml2YXRlIHN1YnNjcmliZVRvT25TZWxlY3RSb3c7XG4gICAgcHJpdmF0ZSBzdWJzY3JpYmVUb09uRGVzZWxlY3RSb3c7XG59XG4iXX0=